# GitHub API
GITHUB_TOKEN=your_github_token_here
GITHUB_REPO_OWNER=metabase
GITHUB_REPO_NAME=metabase
GITHUB_WORKER_TOKEN=your_fine_grained_pat_for_worker

# Discourse API (optional)
DISCOURSE_BASE_URL=https://discourse.metabase.com
# DISCOURSE_API_USERNAME=your_discourse_username
# DISCOURSE_API_KEY=your_discourse_api_key
DISCOURSE_MAX_PAGES=1000

# PostgreSQL Database
DATABASE_URL=postgresql+psycopg://yourdb

# LLM Configuration
LITELLM_API_BASE="http://localhost:4000"
# LITELLM_API_KEY="your-litellm-proxy-api-key"
# LITELLM_RPM=15

# LLM Model Configurations
LITELLM_FAST_MODEL="openai-fast"
LITELLM_SLOW_MODEL="openai-slow"

# API Security
API_KEY=a_super_secret_key_for_your_api

# Application URLs (optional - defaults provided)
GITHUB_BASE_URL=https://github.com/metabase/metabase
DISCOURSE_BASE_URL=https://discourse.metabase.com

# OpenAI Batch Processing Configuration
OPENAI_API_BASE="https://api.openai.com"
OPENAI_API_KEY="your_openai_api_key_here"
OPENAI_BATCH_MODEL="gpt-4.1-nano"
OPENAI_BATCH_ENTITIES_PER_BATCH=100

# Reranker Configuration
RERANKER_ENABLED=true
RERANKER_PROVIDER=api  # Options: local, api
# RERANKER_MODEL=cross-encoder/ms-marco-MiniLM-L6-v2

# External Reranker Provider (only used when RERANKER_PROVIDER=api)
RERANKER_API_BASE=http://localhost:8000
# API key header sent as X-API-Key (defaults to API_KEY if not provided)
# RERANKER_API_KEY=
# Path for the rerank endpoint on the provider (e.g., /v1/rerank)
RERANKER_API_RERANK_PATH=/rerank
# Timeout for external rerank requests in seconds
RERANKER_API_TIMEOUT=30

# Embedding Provider Configuration
# Options: 'local' (use SentenceTransformers locally) or 'api' (use external HTTP service)
EMBEDDING_PROVIDER=api
# If using 'local'
# EMBEDDING_MODEL=sentence-transformers/all-mpnet-base-v2
# EMBEDDING_DEVICE=cuda
# If using 'api'
# Base URL of the external embedding provider (e.g., http://my-embedder:8080)
EMBEDDING_API_BASE=http://localhost:8000
# API key header sent as X-API-Key (defaults to API_KEY if not provided)
# EMBEDDING_API_KEY=
# Path for the embedding endpoint on the provider (e.g., /v1/embeddings)
EMBEDDING_API_EMBEDDING_PATH=/embedding
